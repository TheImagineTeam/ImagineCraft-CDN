stages:
  - ZippingVanilla
  - ZipppingModded
  - Packing
  - Packaging
  - Deploying

Vanilla:
  image: registry.gitlab.com/imagineteam1/web/imaginecraft:zip
  stage: ZippingVanilla
  script:
  - cd packs/vanilla/
  - zip -r vanilla.zip *
  cache:
    untracked: false
    policy: pull-push
    paths:
      - vanilla.zip
  only:
    - master

Modded:
  image: registry.gitlab.com/imagineteam1/web/imaginecraft:zip
  stage: ZipppingModded
  script:
  - cd packs/modded/
  - zip -r modded.zip *
  cache:
    untracked: false
    policy: pull-push
    paths:
    - modded.zip
    - vanilla.zip
  only:
    - master

Win:
  image: registry.gitlab.com/imagineteam1/web/imaginecraft:node
  stage: Packing
  cache:
    untracked: false
    policy: pull-push
    paths:
      - imaginecraft/
      - vanilla.zip
      - modded.zip
  script:
      - git clone https://gitlab.com/imagineteam1/imaginecraft/
      - npm --prefix imaginecraft i
      - npm run --prefix imaginecraft package-win
  only:
    - master

WinStall:
  image: registry.gitlab.com/imagineteam1/web/imaginecraft:mono
  stage: Packaging
  cache:
    untracked: false
    policy: pull-push
    paths:
      - imaginecraft/
      - ImagineCraft_Installer.exe
      - vanilla.zip
      - modded.zip
  script:
      - npm --prefix imaginecraft i
      - npm run --prefix imaginecraft create-installer-win
      - mv imaginecraft/release-builds/windows-installer/ImagineCraft_Installer.exe ImagineCraft_Installer.exe
  only:
    - master

Pages:
  stage: Deploying
  cache:
    untracked: false
    policy: pull
    paths:
      - ImagineCraft_Installer.exe
      - vanilla.zip
      - modded.zip
  script:
    - rm -rf packs
    - rm -rf imaginecraft
    - mkdir .public
    - cp -r * .public
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    - master

Docker:
  image: docker:latest
  stage: Deploying
  services:
    - docker:dind
  cache:
    untracked: false
    policy: pull
    paths:
      - ImagineCraft_Installer.exe
      - vanilla.zip
      - modded.zip
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - rm -rf packs
    - rm -rf imaginecraft
    - mkdir .public
    - cp -r * .public
    - mv .public public
    - docker build --rm -f "Dockerfile" -t registry.gitlab.com/imagineteam1/web/imaginecraft:live "." 
    - docker push registry.gitlab.com/imagineteam1/web/imaginecraft:live
  only:
    - master
  when: on_success
